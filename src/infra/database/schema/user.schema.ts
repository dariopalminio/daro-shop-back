import { Prop, SchemaFactory, Schema } from '@nestjs/mongoose';
import { Document, Schema as MongoSchema } from 'mongoose';

export type UserDocument = User & Document;

@Schema()
export class User {

  //_id: holds an ObjectId autogenerated. Iimplicitly has "index: true".

  @Prop()
  enable: boolean;

  @Prop({ required: true, unique: true }) // implicitly has "index: true" because is unique
  userName: string;

  @Prop({
    required: true,
    min: 3,
    max: 254
  })
  firstName: string;

  @Prop({
    required: true,
  })
  lastName: string;

  @Prop({
    unique: true,
    required: true,
    min: 6,
    max: 254
  })
  email: string; // implicitly has "index: true" because is unique

  @Prop({
    required: true
  })
  password: string;

  @Prop()
  roles: string[];

  @Prop({
    default: false,
  })
  verified: boolean;

  @Prop()
  verificationCode: string;

  @Prop({ default: Date.now(), })
  startVerificationCode: Date;

  @Prop({ required: true, default: new Date() })
  createdAt?: Date;

  @Prop({ required: true, default: new Date() })
  updatedAt?: Date;
};

export const UserSchema = SchemaFactory.createForClass(User);
